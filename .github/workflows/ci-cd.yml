name: Backend & Frontend CI/CD

on:
  push:
    branches: [ main ]   # 当推送到 main 分支时触发

jobs:
  build-and-deploy:
    runs-on: self-hosted   # 你的 AWS EC2 runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Verify secrets presence
        run: |
          echo "MONGO_URI set?: ${{ secrets.MONGO_URI != '' }}"
          echo "JWT_SECRET set?: ${{ secrets.JWT_SECRET != '' }}"
          echo "PORT set?: ${{ secrets.PORT != '' }}"

      - name: Ensure pm2 available & stop existing apps
        run: |
          npm i -g pm2 || true
          pm2 -v || true
          pm2 stop all || true

      # ===== Backend =====
      - name: Install Backend Dependencies
        working-directory: ./backend
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci (backend)"
            npm ci
          else
            echo "No lockfile, falling back to npm install (backend)"
            npm install
          fi

      - name: Create backend .env
        working-directory: ./backend
        run: |
          rm -f .env
          {
            echo "MONGO_URI=${{ secrets.MONGO_URI }}"
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}"
            echo "PORT=${{ secrets.PORT }}"
          } >> .env

      - name: Run Backend Tests (skip if none)
        working-directory: ./backend
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          if ls test/*.js 2>/dev/null || ls **/*.test.js **/*.spec.js 2>/dev/null; then
            npm test
          else
            echo "No backend tests found, skipping."
          fi

      # ===== Frontend =====
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci (frontend)"
            npm ci
          else
            echo "No lockfile, falling back to npm install (frontend)"
            npm install
          fi

      - name: Build Frontend
        working-directory: ./frontend
        run: |
          rm -rf build dist || true
          if npm run | grep -q " build"; then
            npm run build
          else
            echo "No build script defined for frontend. Skipping build."
          fi

      # ===== Start/Restart Backend with PM2 =====
      - name: Start/Restart Backend with PM2
        run: |
          pm2 list || true
          pm2 restart lcms-backend || pm2 start backend/app.js --name lcms-backend
          pm2 save || true
