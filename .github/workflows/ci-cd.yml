name: CI/CD (Backend & Frontend)

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read


concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend CI/CD
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests and save log
        run: npm test | tee test-output.txt

      - name: Upload test log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-log
          path: backend/test-output.txt
          if-no-files-found: ignore

      - name: Build (optional)
        run: npm run build --if-present

      - name: Deploy to EC2 (Backend)
        if: success() && github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            which pm2 >/dev/null 2>&1 || sudo npm i -g pm2
            cd /var/www/backend
            if [ ! -d .git ]; then
            
              git clone https://github.com/Rirhard-HE/LCMS.git .
            fi
            git fetch --all
            git reset --hard origin/main
            npm ci --omit=dev
            pm2 restart backend || pm2 start npm --name "backend" -- start

  frontend:
    name: Frontend CI/CD
    runs-on: ubuntu-latest
    needs: backend
    timeout-minutes: 30
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload build artifact (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build
          if-no-files-found: error

      - name: Deploy static files to EC2 (Frontend)
        if: success() && github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "frontend/build/**"
          target: "/var/www/frontend"

      - name: Reload Nginx
        if: success() && github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: sudo systemctl reload nginx
